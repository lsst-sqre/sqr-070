# Document metadata. metadata.yaml is used by documenteer and other tools
# to build the document and index it. It should be maintained alongside the
# document in git and kept up to date.

# The series identifier. E.g. SQR, DMTN, SMTN, LDM, LSE, etc.
series: "SQR"

# Document number, as a string. It should be three digits, padded with leading zeros
serial_number: "070"

# Serial number of the document. E.g. SQR-001
# NOTE: this field is *planned* for deprecation
doc_id: "SQR-070"

# Title of the document, without the series/serial designation
doc_title: "A Telegraf Operator for Rubin Phalanx Applications"

# Author names, ordered as a list. Each author name should be formatted as 'First Last'
authors:
  - "Adam Thornton"

# Current document revision date, YYYY-MM-DD
# Only set this field if you need to manually fix the revision date;
# the revision date is obtained from the HEAD Git commit otherwise.
# last_revised: 'YYYY-MM-DD'

# Version. Use semantic versioning, e.g., 1.0.0, including .dev, as necessary.
# This version string should correspond to the git tag when the document is
# published on Zenodo. If left commented out, the current Git branch is used
# instead version: '1.0.0'

# Digital Object Identifier (DOI). Uncomment if available.
# Keep this DOI updated as new releases are pushed to Zenodo
# doi: 10.5281/zenodo.#####

# Copyright statement
copyright: "2022, Association of Universities for Research in Astronomy, Inc. (AURA)"

# Description. A short, 1-2 sentence statemement used by document indices.
description: "The Influx-supplied telegraf-operator is a good concept, but it doesn't work very well for Rubin's needs.  

While we like the idea of specifying Prometheus metrics endpoints to scrape via annotations, doing it at the pod level does not work well for us.  Since Phalanx has the concept of applications, which generally map one-to-one to namespaces, we would prefer an annotation system where the annotations specifying metrics endpoints were attached to the application object (or the namespace) rather than pod objects.  This technote will propose an annotation syntax that would enable endpoint specification that fits our use-case, and guide an implementation of an operator to realize that specification."

# Abstract, if available
# abstract: >
#           Write your paragraph
#           here with multiple lines.
#
#           You can have multiple paragraphs too.

# URL where this document is published by Read the Docs. e.g. http://sqr-001.lsst.codes
url: "https://sqr-070.lsst.io"

# LSST Docushare URL, if authoritative versions of this are are stored there.
# Leave as an empty string or comment out this key if there is no Docushare URL.
docushare_url: ""

# GitHub repo URL
github_url: "https://github.com/lsst-sqre/sqr-070"
